---
title: " Assign Classification Types"
---

Use the classification determinants to calculate the climate type for each grid cell, using the Köppen-Trewartha classification system.

## ***Periods***
```{r}
#| label: periods
# Climatological Reference Period
crp = "crp"
crp_beg <- 1961
crp_end <- 1990
crp_lbl <- paste("CRP ", crp_beg, "-", crp_end, sep = "")
# Recent Climate Period
rcp = "rcp"
rcp_beg <- 2015
rcp_end <- 2024
rcp_lbl <- paste("RCP ", rcp_beg, "-", rcp_end, sep = "")
```

## ***Packages***
```{r}
#| label: packages
suppressPackageStartupMessages({
  library(tidyverse)
  library(sf)
  library(arrow)
  library(gt)
  library(units)
  library(patchwork)
})
```

## ***Directories***
```{r}
#| label: directories
dir_rf <- "data/00_reference/"
dir_rd <- "data/03_transformed_data/"
dir_wr <- "data/04_classified_data/"
```

## ***Palettes***

```{r}
#| label: palettes

pth <- paste0(dir_rf,"ktc_group_palette.csv")
ktc_grp_palette_df<- read_csv(pth, show_col_types = FALSE)
ktc_grp_levels <- ktc_grp_palette_df$grp
ktc_grp_palette_str <- setNames(
  ktc_grp_palette_df$hex,
  ktc_grp_palette_df$grp
)

pth <- paste0(dir_rf,"ktc_type_palette.csv")
ktc_typ_palette_df <- read_csv(pth, show_col_types = FALSE)
ktc_typ_levels <- ktc_typ_palette_df$typ
ktc_typ_palette_str <- setNames(
  ktc_typ_palette_df$hex,
  ktc_typ_palette_df$typ
)

```

## ***Projections***
```{r}
#| label: projections
rbn_prj <- "ESRI:54030"
```

## ***Coastline***
```{r}
#| label: coastline
dir <- dir_rf
fil <- "global-coastline.gpkg"
pth <- paste(dir, fil, sep = "")
coastline_sf <- st_read(pth, quiet=TRUE)
```

## ***Import***
```{r}
#| label: determinants
pth <- paste(dir_rd, "crp_determinants.parquet", sep = "")
crp_determinants_df <- read_parquet(pth) 

pth <- paste(dir_rd, "rcp_determinants.parquet", sep = "")
rcp_determinants_df <- read_parquet(pth) 
```

## ***Functions***

### Assign KTC Group

```{r}
#| label: fn_assign_grp
#| 
fn_assign_grp <- function(df) {
  df <- df |>
    mutate(
      grp = case_when(
        tmax < 10 ~ "F",
        ptot < athr ~ "B",
        tmin >= 18 ~ "A",
        tg10 >= 8 ~ "C",
        tg10 >= 4 ~ "D",
        tg10 >= 1 ~ "E",
        TRUE ~ "X"
      )
    )
  return(df)
}

```

### Assign KTC Type

```{r}
#| label: fn_assign_typ
fn_assign_typ <- function(df) {
  df <- df |>
    mutate(
      cls = case_when(
        grp == "A" & (pl60 <= 2) ~ "r",
        grp == "A" ~ "w",
        grp == "B" & (ptot < athr/2) ~ "W",
        grp == "B" ~ "S",

        grp == "C" & (wtot >= stot * 3) & (pmin < 30) & (ptot < 890) ~ "s",
        grp == "C" & (stot >= wtot * 10) ~ "w",
        grp == "C" ~ "f",

        grp == "D" & (tmin > 0) ~ "o",
        grp == "D" ~ "c",
        grp == "F" & (tmax > 0) ~ "t",
        grp == "F" ~ "i",
        TRUE ~ ""
      ),
      typ = paste(grp, cls, sep = "")
    )
  df <- df|> select(lon, lat, area, lsm, grp, typ)
  return(df)
}
```

### Create Map

#### Group

```{r}
#| label: fn_create_grp_map
fn_create_grp_map <- function(plot_data, palette, cp_lbl) {

  p <- ggplot(plot_data) +
    geom_sf(aes(color = grp), size = 0.01) +
    scale_color_manual(values = palette, drop = FALSE) +
    geom_sf(
      data = coastline_sf,
      color = "black",
      linewidth = 0.1
    ) +
    coord_sf(crs = rbn_prj) +
    labs(
      title = "Köppen-Trewartha Climate Classification Groups",
      subtitle = cp_lbl,
      color = "Group"
    ) +
    guides(
      color = guide_legend(
        override.aes = list(
          size = 5 # legend point size only
        )
      )
    )
    return(p)
}
```

#### Type

```{r}
#| label: fn_create_typ_map

fn_create_typ_map <- function(plot_data, palette, cp_lbl) {

  p <- ggplot(plot_data) +
    geom_sf(aes(color = typ), size = 0.01) +
    scale_color_manual(values = palette, drop = FALSE) +
    geom_sf(
      data = coastline_sf,
      color = "black",
      linewidth = 0.1
    ) +
    coord_sf(crs = rbn_prj) +
    labs(
      title = "Köppen-Trewartha Climate Classification Types",
      subtitle = cp_lbl,
      color = "Type"
    ) +
    guides(
      color = guide_legend(
        override.aes = list(
          size = 5 # legend point size only
        )
      )
    )
    return(p)
}

```
### Build Summary Table

#### Summary Table v1

```{r}
#| label: build_tbl_v1

fn_build_summary_table_v1 <- function(df, cp, id, id_lbl) {
  tbl <- df |>
    gt(rowname_col = id) |>
    tab_stubhead(label = id_lbl)|>
    tab_header(
      title = paste(id_lbl, "Summary"),
      subtitle = cp
    ) |>

    cols_align(align = "center", columns = mkm) |>
    tab_style(
      style = cell_text(align = "center"),
      locations = cells_column_labels(columns = mkm)
    ) |>

    cols_label(
      lbl = "Description",
      mkm = "Area (Mkm²)",
      pct = "Area %"
    ) |>

    fmt_number(columns = c(mkm), decimals = 1) |>
    fmt_number(columns = c(pct), decimals = 2) |>
    grand_summary_rows(
      columns = c(mkm, pct),
      fns = list("Total" = ~ sum(.)),
      fmt = list(~ fmt_number(.x, decimals = 1))
    ) 
}
```

#### Summary Table v2

```{r}
#| label: build_tbl_v2

fn_build_summary_table_v2 <- function(df, cp, id, id_lbl) {
  tbl <- df |>
    gt(rowname_col = id) |>
    tab_stubhead(label = id_lbl)|>
    tab_header(
      title = paste(id_lbl, "Summary"),
      subtitle = cp
    ) |>

    cols_label(
      lbl = "Description",
      pct = "Area %"
    ) |>

    fmt_number(columns = c(pct), decimals = 2) |>
    grand_summary_rows(
      columns = c(pct),
      fns = list("Total" = ~ sum(.)),
      fmt = list(~ fmt_number(.x, decimals = 1))
    ) 
}
```

#### Summary Table v3

```{r}
#| label: build_tbl_v3

fn_build_summary_table_v3 <- function(df, cp, id, id_lbl) {
  tbl <- df |>
    gt(rowname_col = id) |>

    cols_label(
      pct = "Area %"
    ) |>

    fmt_number(columns = c(pct), decimals = 2) |>
    grand_summary_rows(
      columns = c(pct),
      fns = list("Total" = ~ sum(.)),
      fmt = list(~ fmt_number(.x, decimals = 1))
    ) 
}

```
## ***Main Process***

```{r}
#| label: main_process

# Step 1 assign

crp_grp_df <- fn_assign_grp(crp_determinants_df)
crp_typ_df <- fn_assign_typ(crp_grp_df)

rcp_grp_df <- fn_assign_grp(rcp_determinants_df)
rcp_typ_df <- fn_assign_typ(rcp_grp_df)

# Step 2 select

crp_grp_df <- crp_grp_df |> select(lat,lon,area,lsm,grp)
crp_typ_df <- crp_typ_df |> select(lat,lon,area,lsm,typ)

rcp_grp_df <- rcp_grp_df |> select(lat,lon,area,lsm,grp)
rcp_typ_df <- rcp_typ_df |> select(lat,lon,area,lsm,typ)

# Step 3 join

ktc_grp_df <- crp_grp_df %>% 
  left_join(rcp_grp_df , by = c("lon", "lat", "lsm")) |>
  rename(cgrp = grp.x, rgrp = grp.y, area = area.x) |>
  select(lon, lat, lsm, area, cgrp, rgrp) |>
  mutate(cgrp = factor(cgrp, levels = ktc_grp_palette_df$grp)) |>
  mutate(rgrp = factor(rgrp, levels = ktc_grp_palette_df$grp))

ktc_typ_df <- crp_typ_df %>% 
  left_join(rcp_typ_df , by = c("lon", "lat", "lsm")) |>
  rename(ctyp = typ.x, rtyp = typ.y, area = area.x) |>
  select(lon, lat, lsm, area, ctyp, rtyp) |>
  mutate(ctyp = factor(ctyp, levels = ktc_typ_palette_df$typ)) |>
  mutate(rtyp = factor(rtyp, levels = ktc_typ_palette_df$typ))

# Step 4 convert to sf

ktc_grp_sf <- st_as_sf(ktc_grp_df, coords = c("lon", "lat"), crs = 4326)
ktc_typ_sf <- st_as_sf(ktc_typ_df, coords = c("lon", "lat"), crs = 4326)

# Step 5 summarize

ktc_grp_cmb_sf <- ktc_grp_sf |>
  filter(lsm > 0) |>
  summarise(
    geometry = st_combine(geometry),
    mkm = sum(area*lsm),
    .by = c(cgrp, rgrp)
  ) |>
  mutate(pct = round(mkm / sum(mkm) * 100, 3)) |>
  select(cgrp, rgrp, mkm, pct, geometry) |>
  arrange(cgrp, rgrp) |>
  st_set_crs(4326)

ktc_typ_cmb_sf <- ktc_typ_sf |>
  filter(lsm > 0) |>
  summarise(
    geometry = st_combine(geometry),
    mkm = sum(area*lsm),
    .by = c(ctyp, rtyp)
  ) |>
  mutate(pct = round(mkm / sum(mkm) * 100, 3)) |>
  select(ctyp, rtyp, mkm, pct, geometry) |>
  arrange(ctyp, rtyp) |>
  st_set_crs(4326)

# Step 6 crp summary df

crp_grp_tbl_df <- ktc_grp_cmb_sf |>
  st_drop_geometry() |>
  rename(grp = cgrp) |>
  select(grp, mkm, pct) |>
  summarise(
    mkm = sum(mkm),
    pct = sum(pct),
    .by = grp
  )|>
  arrange(grp)

crp_typ_tbl_df <- ktc_typ_cmb_sf |>
  st_drop_geometry() |>
  rename(typ = ctyp) |>
  select(typ, mkm, pct) |>
  summarise(
    mkm = sum(mkm),
    pct = sum(pct),
    .by = typ
  )|>
  arrange(typ)

# Step 7 rcp summary df

rcp_grp_tbl_df <- ktc_grp_cmb_sf |>
  st_drop_geometry() |>
  rename(grp = rgrp) |>
  select(grp, mkm, pct) |>
  summarise(
    mkm = sum(mkm),
    pct = sum(pct),
    .by = grp
  )|>
  arrange(grp)

rcp_typ_tbl_df <- ktc_typ_cmb_sf |>
  st_drop_geometry() |>
  rename(typ = rtyp) |>
  select(typ, mkm, pct) |>
  summarise(
    mkm = sum(mkm),
    pct = sum(pct),
    .by = typ
  )|>
  arrange(typ)

```

## ***Save***

```{r}
#| label: save
 
fil <- "ktc_grp_classification.gpkg"
dir <- dir_wr
pth <- paste0(dir,fil)
st_write(ktc_grp_cmb_sf, pth, delete_dsn = TRUE, quiet = TRUE)

fil <- "ktc_typ_classification.gpkg"
dir <- dir_wr
pth <- paste0(dir,fil)
st_write(ktc_typ_cmb_sf, pth, delete_dsn = TRUE, quiet = TRUE)

```

## CRP Classification Summary

### CRP Tables

#### Group

```{r}
#| label: crp_grp_table

df1 <- crp_grp_tbl_df
df2 <- ktc_grp_palette_df |> select(grp, lbl)

dfj <- df1 |>
   left_join(df2, by = "grp") 
   
tbl_df1_v1 <- dfj |> select(grp, lbl, mkm, pct)
tbl_df1_v2 <- dfj |> select(grp, lbl, pct)
#tbl_df1_v3 <- dfj |> select(grp, pct)

crp_grp_tbl_v1 <- fn_build_summary_table_v1(tbl_df1_v1, crp_lbl, "grp", "Group")
crp_grp_tbl_v2 <- fn_build_summary_table_v2(tbl_df1_v2, crp_lbl, "grp", "Group")
#crp_grp_tbl_v3 <- fn_build_summary_table_v3(tbl_df1_v3, crp_lbl, "grp", "Group")

crp_grp_tbl_v1 
```

#### Type

```{r}
#| label: crp_typ_table

df1 <- crp_typ_tbl_df
df2 <- ktc_typ_palette_df |> select(typ, lbl)

dfj <- df1 |>
   left_join(df2, by = "typ") |>
   select(typ,lbl,mkm, pct)
tbl_v1 <- dfj |> select(typ, lbl, mkm, pct)
#tbl_v2 <- dfj |> select(typ, lbl, pct)
tbl_v3 <- dfj |> select(typ, pct)

crp_typ_tbl_v1 <- fn_build_summary_table_v1(tbl_v1, crp_lbl, "typ", "Type")
#crp_typ_tbl_v2 <- fn_build_summary_table_v2(tbl_v2, crp_lbl, "typ", "Type")
crp_typ_tbl_v3 <- fn_build_summary_table_v3(tbl_v3, crp_lbl, "typ", "Type")

crp_typ_tbl_v1 

```

### CRP Maps

#### Group

```{r}
#| label: crp_grp_map
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

plot_data <- ktc_grp_cmb_sf |>
  select(cgrp) |>
  rename(grp = cgrp)
plot_data <- plot_data |>
  mutate(grp = factor(grp, levels = ktc_grp_levels))
plot_palette_str <- ktc_grp_palette_str[levels(plot_data$grp)]
crp_grp_map <- fn_create_grp_map(plot_data, plot_palette_str, crp_lbl)
crp_grp_map

```

#### Type

```{r}
#| label: crp_typ_map
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

plot_data <- ktc_typ_cmb_sf |>
  select(ctyp) |>
  rename(typ = ctyp)
plot_data <- plot_data |>
  mutate(typ = factor(typ, levels = ktc_typ_levels))
plot_palette_str <- ktc_typ_palette_str[levels(plot_data$typ)]
crp_typ_map <- fn_create_typ_map(plot_data, plot_palette_str, crp_lbl)
crp_typ_map

```

### CRP Patchwork

#### Group

```{r}
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

wrap_table(crp_grp_tbl_v2, panel = "full", space = "fixed") + crp_grp_map

```

#### Type

```{r}
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

wrap_table(crp_typ_tbl_v3, panel = "full", space = "fixed") + crp_typ_map

```

## RCP Classification Summary

### RCP Tables

#### Group

```{r}
#| label: rcp_grp_table

df1 <- rcp_grp_tbl_df
df2 <- ktc_grp_palette_df |> select(grp, lbl)
dfj <- df1 |>
   left_join(df2, by = "grp") |>
   select(grp,lbl,mkm,pct)

tbl_v1 <- dfj |> select(grp, lbl, mkm, pct)
tbl_v2 <- dfj |> select(grp, lbl, pct)
# tbl_v3 <- dfj |> select(grp, pct)

rcp_grp_tbl_v1 <- fn_build_summary_table_v1(tbl_v1, rcp_lbl, "grp", "Group")
rcp_grp_tbl_v2 <- fn_build_summary_table_v2(tbl_v2, rcp_lbl, "grp", "Group")
# rcp_grp_tbl_v3 <- fn_build_summary_table_v3(tbl_v3, rcp_lbl, "grp", "Group")

rcp_grp_tbl_v1

```

#### Type

```{r}
#| label: rcp_typ_table

df1 <- rcp_typ_tbl_df
df2 <- ktc_typ_palette_df |> select(typ, lbl)

dfj <- df1 |>
   left_join(df2, by = "typ") |>
   select(typ,lbl,mkm,pct)

tbl_v1 <- dfj |> select(typ, lbl, mkm, pct)
#tbl_v2 <- dfj |> select(typ, lbl, pct)
tbl_v3 <- dfj |> select(typ, pct)

rcp_typ_tbl_v1 <- fn_build_summary_table_v1(tbl_v1, rcp_lbl, "typ", "Type")
#rcp_typ_tbl_v2 <- fn_build_summary_table_v2(tbl_v2, rcp_lbl, "typ", "Type")
rcp_typ_tbl_v3 <- fn_build_summary_table_v3(tbl_v3, rcp_lbl, "typ", "Type")

rcp_typ_tbl_v1 

```

### RCP Maps

#### Group

```{r}
#| label: rcp_grp_map
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

plot_data <- ktc_grp_cmb_sf |>
  select(rgrp) |>
  rename(grp = rgrp)
plot_data <- plot_data |>
  mutate(grp = factor(grp, levels = ktc_grp_levels))
plot_palette_str <- ktc_grp_palette_str[levels(plot_data$grp)]
rcp_grp_map <- fn_create_grp_map(plot_data, plot_palette_str, rcp_lbl)
rcp_grp_map
```

#### Type

```{r}
#| label: rcp_typ_map
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

plot_data <- ktc_typ_cmb_sf |>
  select(rtyp) |>
  rename(typ = rtyp)
plot_data <- plot_data |>
  mutate(typ = factor(typ, levels = ktc_typ_levels))
plot_palette_str <- ktc_typ_palette_str[levels(plot_data$typ)]
rcp_typ_map <- fn_create_typ_map(plot_data, plot_palette_str, rcp_lbl)
rcp_typ_map
```

### RCP Patchwork

#### Group

```{r}
#| label: rcp_grp_patchwork
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

wrap_table(rcp_grp_tbl_v2, panel = "full", space = "fixed") + rcp_grp_map

```

#### Type

```{r}
#| label: rcp_typ_patchwork
#| fig-width: 10
#| fig-aspect: .7   
#| out-width: 100%

wrap_table(rcp_typ_tbl_v3, panel = "full", space = "fixed") + rcp_typ_map

```
